syntax = "proto2";

package flang;

// Type of ast node, which can be got by ASTNode::getNodeType() function.
enum ASTNodeType {
  PROGRAM_NODE = 1;
  VAR_DECL_NODE = 3;
  VAR_DECL_FRAGMENT_NODE = 4;
  STMT_NODE = 5;
  FUNC_NODE = 6;
  CALL_NODE = 7;
  CLASS_NODE = 8;
  BLOCK_NODE = 9;
  IF_NODE = 10;
  WHILE_NODE = 11;
  BREAK_NODE = 12;
  RETURN_NODE = 13;
  UNARY_EXP_NODE = 14;
  BINARY_EXP_NODE = 15;
  ASSIGN_NODE = 16;
  NEW_NODE = 17;
  PRIMITIVE_NODE = 18;
  INT_VAL_NODE = 19;
  STRING_VAL_NODE = 20;
  FLOAT_VAL_NODE = 21;
  DOUBLE_VAL_NODE = 22;
  CHAR_VAL_NODE = 23;
  BOOL_VAL_NODE = 24;
  NAME_NODE = 25;
  NULL_NODE = 26;
  SIMPLE_NAME_NODE = 27;
  QUALIFIED_NAME_NODE = 28;
  PRINT_NODE = 29;
  VAR_NODE = 30;
  INT32_TYPE_NODE = 31;
  INT64_TYPE_NODE = 32;
  FLOAT_TYPE_NODE = 33;
  DOUBLE_TYPE_NODE = 34;
  CHAR_TYPE_NODE = 35;
  STRING_TYPE_NODE = 36;
  BOOL_TYPE_NODE = 37;
  VOID_TYPE_NODE = 38;
  COMPOSITE_TYPE_NODE = 39;
  CLASS_TYPE_NODE = 40;
  ARRAY_TYPE_NODE = 41;
  CONTINUE_NODE = 42;
  USER_DEF_TYPE_NODE = 43;
  EMPTY_STMT_NODE = 44;
  STMT_LIST_NODE = 45;
  CONSTRUCTOR_NODE = 46;
  DESTRUCTOR_NODE = 47;
  CLASS_BODY_NODE = 48;
  EXP_NODE = 49;
  IMPORT_NODE = 50;
  IMPORT_LIST_NODE = 51;
  FIELD_ACCESS_NODE = 52;
  PARAM_LIST_NODE = 53;
  PARAM_DECL_LIST_NODE = 54;
  TYPE_NODE = 55;
}
